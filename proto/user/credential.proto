syntax = "proto3";

package user;

option go_package = "github.com/credstack/credstack-lib/proto/user";

/*
UserCredential - Represents the users hashed password and the parameters used to hash it. Hashing is performed
with Argon2id as recommended OWASP
 */
message UserCredential {
  // key - The user's hashed password represented as a string
  string key = 1; // @gotags: bson:"key"

  // salt - The randomly generated salt used for hashing the users password
  string salt = 2; // @gotags: bson:"salt"

  // time - The time used as a cost parameter when hashing user passwords. Usually is 1
  uint32 time = 3; // @gotags: bson:"time"

  // memory - The amount of memory to be used when hashing passwords. Usually 64MB's but can be modified for slower systems
  uint32 memory = 4; // @gotags: bson:"memory"

  // threads - The number of threads (or go-routines in our case) that should be used when hashing passwords
  uint32 threads = 5; // @gotags: bson:"threads"

  // key_length - The length of the generated password hash. Usually 32 or 64
  uint32 key_length = 6; // @gotags: bson:"key_length"

  // salt_length - The length of the generated password salt. Usually 32
  uint32 salt_length = 7; // @gotags: bson:"salt_length"

}